/*
   표현식과 연산자
*/

10          // 리터럴 표현식
sum         // 식별자 표현식
10 + 20     // 연산자 표현식
square()    // 함수/메소드 호출 표현식



/*
    문과 표현식
    - 문은 리터럴, 연산자, 표현식, 키워드 등으로 구성되며 세미콜론( ; )으로 끝나야 함 -> 자바스크립트 엔진이 스크립트를 해석할 때, 자바스크립트 엔진에는 문의 끝이라고 예측되는 지점에 세미콜론을 자동으로 붙여주는 세미콜론 자동 삽입 기능(ASI, automatic semicolon insertion)이 있기 때문

*/

var x;                                  // 변수 선언문
x = 5;                                  // 할당문
function foo () {}                      // 함수 선언문
if (x > 5) { /*…*/ }                    // 조건문
for (var i = 0; i < 10; i++) { /*…*/ }  // 반복문



/*
    연산자 (c/c++과 동일, 다른내용만 기술)
    - 일치 비교 연산자
        1) ===: x === y	(x와 y의 값과 타입이 같음)
        2) !==: x !== y (x와 y의 값과 타입이 다름)

    - 쉼표 연산자
        왼쪽 피연산자부터 차례대로 피연산자를 평가하고 마지막 피연산자의 평가가 끝나면 마지막 피연산자의 평가 결과를 반환

    - typeof 연산자
        자신의 뒤에 위치한 피연산자의 데이터 타입을 문자열로 반환
*/
